Word count: 488
**PROMPT FOR ETHICAL HACKING: IMPROPER ACCESS CONTROL**

AS AN EXPERT IN ETHICAL HACKING AND BUG BOUNTY HUNTING, YOUR OBJECTIVE IS TO PERFORM A THOROUGH RECONNAISSANCE ON A SPECIFIC TARGET TO IDENTIFY VULNERABILITIES RELATED TO IMPROPER ACCESS CONTROL. THIS TYPE OF VULNERABILITY OFTEN OCCURS WHEN A WEB APPLICATION FAILS TO ENFORCE PROPER AUTHORIZATION CHECKS, ALLOWING UNAUTHORIZED USERS TO ACCESS SENSITIVE INFORMATION OR FUNCTIONALITIES.

### DESIRED OUTCOMES:
1. **IDENTIFY TARGET SCOPE**: CLEARLY DEFINE THE TARGET APPLICATION OR SYSTEM YOU WILL BE TESTING, INCLUDING URLS, ENDPOINTS, AND USER ROLES. GATHER INFORMATION ABOUT THE APPLICATION’S FUNCTIONALITY AND USER ACCESS LEVELS.
  
2. **USER ROLE ENUMERATION**: INVESTIGATE HOW DIFFERENT USER ROLES ARE DEFINED WITHIN THE APPLICATION. LOOK FOR DISCREPANCIES IN ACCESS PERMISSIONS BY ATTEMPTING TO ENUMERATE ROLES USING VARIOUS TECHNIQUES SUCH AS:
   - **URL MANIPULATION**: CHANGE PARAMETERS IN THE URL TO SEE IF YOU CAN ACCESS PARTS OF THE APPLICATION THAT ARE INTENDED FOR DIFFERENT USER ROLES.
   - **SESSION HIJACKING**: USE TOOLS LIKE BURP SUITE OR OWASP ZAP TO INTERCEPT REQUESTS AND MODIFY SESSION TOKENS TO IMPERSONATE USERS WITH HIGHER PRIVILEGES.

3. **ACCESS CONTROL TESTING**: USE THE FOLLOWING METHODS TO TEST FOR IMPROPER ACCESS CONTROLS:
   - **VERTICAL PRIVILEGE ESCALATION**: IF YOU HAVE ACCESS AS A REGULAR USER, ATTEMPT TO ACCESS ADMIN-ONLY FEATURES BY MANIPULATING THE REQUEST. FOR EXAMPLE, ACCESS AN ADMIN ENDPOINT LIKE `/ADMIN/DASHBOARD` DIRECTLY.
   - **HORIZONTAL PRIVILEGE ESCALATION**: TRY TO ACCESS RESOURCES BELONGING TO OTHER USERS, SUCH AS `/USER/PROFILE?ID=123`, CHANGING THE `ID` PARAMETER TO SEE IF YOU CAN ACCESS ANOTHER USER’S PROFILE.

4. **EXAMPLE EXPLOIT SCENARIOS**:
   - **SCENARIO 1**: IF THE APPLICATION USES PREDICTABLE URLS, ATTEMPT TO ACCESS AN ADMIN PANEL DIRECTLY BY GUESSING THE URL, E.G., `/ADMIN/SETTINGS`.
   - **SCENARIO 2**: IF THE APPLICATION HAS A DOCUMENT UPLOAD FEATURE, TRY UPLOADING A MALICIOUS FILE AS A REGULAR USER AND CHECK IF IT CAN BE ACCESSED BY AN ADMIN OR OTHER USERS.
   - **SCENARIO 3**: USE TOOLS SUCH AS POSTMAN TO CRAFT API REQUESTS THAT BYPASS ACCESS CONTROLS. FOR INSTANCE, SEND A REQUEST TO AN ENDPOINT LIKE `/API/V1/USERS/123` WITHOUT PROPER AUTHENTICATION TOKENS AND SEE IF THE SERVER RESPONDS WITH USER DETAILS.

5. **DOCUMENT FINDINGS**: RECORD ALL INSTANCES OF IMPROPER ACCESS CONTROL YOU DISCOVER, INCLUDING THE STEPS TAKEN TO REPRODUCE THE VULNERABILITIES, POTENTIAL IMPACT, AND SUGGESTIONS FOR REMEDIATION.

6. **RESPONSIBLE DISCLOSURE**: PREPARE TO REPORT YOUR FINDINGS TO THE TARGET ORGANIZATION RESPONSIBLY, EMPHASIZING THE IMPORTANCE OF FIXING THESE VULNERABILITIES TO PROTECT USER DATA AND MAINTAIN THE INTEGRITY OF THE APPLICATION.

### TOOLS AND TECHNIQUES:
- **BURP SUITE**: FOR INTERCEPTING AND MODIFYING HTTP REQUESTS.
- **OWASP ZAP**: FOR AUTOMATED SCANNING AND FINDING VULNERABILITIES.
- **POSTMAN**: FOR CRAFTING SPECIFIC API REQUESTS TO TEST ACCESS CONTROLS.
- **FUZZING TOOLS**: TO AUTOMATE THE PROCESS OF TESTING DIFFERENT ENDPOINTS WITH VARYING PARAMETERS.

BY FOLLOWING THIS STRUCTURED APPROACH, YOU WILL EFFECTIVELY PERFORM RECONNAISSANCE FOR IMPROPER ACCESS CONTROL VULNERABILITIES AND CONTRIBUTE TO THE OVERALL SECURITY POSTURE OF THE TARGET APPLICATION. ALWAYS REMEMBER TO OPERATE WITHIN THE LEGAL BOUNDARIES AND SCOPE OF YOUR ENGAGEMENT.